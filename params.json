{"name":"ansvif","tagline":"Feeds garbage arguments and data into programs trying to induce a segmentation fault.  Good for finding bugs.","body":"### Intro\r\n**A Not So Very Intelligent Fuzzer**\r\n\r\nansvif, written primarily in C++, is designed to find code bugs by throwing garbage input at programs to see how they react.  This is great for finding bugs, because not every type of input is always handled, and buffers are not always checked, etc.  It also comes in handy when writing (and protecting against), buffer overflow exploitation.\r\n\r\n### Checkout and compliation\r\n\r\n```\r\n$ git clone https://github.com/oxagast/ansvif\r\n$ cd ansvif\r\n$ make\r\n$ make test\r\n```\r\n\r\nIf you would like to play with faulty.c you can compile it with \r\n\r\n```\r\n$ gcc faulty.c -o faulty\r\n```\r\n\r\n### Usage\r\nThe most simplistic usage is:\r\n```\r\n$ echo \"Marshall\" ./ansvif -t examples/template -c ./faulty -b 64\r\n$ ./ansvif -m mount -c /usr/sbin/mount -e examples/template_env -x examples/template_other -f 8 -b 2048\r\n$ ./ansvif -t examples/blank -F tmp/tmphtml -x examples/htmltags -c /usr/bin/iceweasel -b 128 -A \"file:///home/username/src/ansvif/tmp/tmphtml\"  -f 2 -n -R \"sleep 3 && killall iceweasel\" -S \">\"\r\n```\r\n\r\n### Other\r\nIncluded is a file, bad_input.tar.xz.  This has some pregenerated semi-psudorandom data in it.  You can try it out by piping it to ansvif.  You may want some more specific data to be piped in, if so, create a file line by line and pipe it in.\r\n\r\n### Authors and Contributors\r\nMarshall Whittaker (@oxagast), with some help from other sources such as stackexchanges, and IRC.  Thanks!\r\n\r\n### Support or Contact\r\nYou can contact me at marshall@wtyw.net and I will try to respond in a timely manner!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}